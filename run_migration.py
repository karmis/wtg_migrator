#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
–ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–∏ VK –¥–∞–Ω–Ω—ã—Ö
–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞: wtg_admin/run_web_interface/
"""

import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–æ–≤
current_dir = os.path.dirname(os.path.abspath(__file__))
sys.path.insert(0, current_dir)

# –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
os.makedirs(os.path.join(current_dir, 'db'), exist_ok=True)
os.makedirs(os.path.join(current_dir, 'dumps', 'vk'), exist_ok=True)
os.makedirs(os.path.join(current_dir, 'logs'), exist_ok=True)
os.makedirs(os.path.join(current_dir, 'reports'), exist_ok=True)

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –º–∏–≥—Ä–∞—Ç–æ—Ä–∞"""
    print("=== VK DATA MIGRATOR ===")

    # –ü—É—Ç–∏ –∫ —Ñ–∞–π–ª–∞–º
    target_db = os.path.join(current_dir, "db", "db.db")
    vk_dumps = os.path.join(current_dir, "dumps", "vk")

    print(f"–¶–µ–ª–µ–≤–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: {target_db}")
    print(f"–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Å VK –¥–∞–º–ø–∞–º–∏: {vk_dumps}")

    if not os.path.exists(vk_dumps):
        print(f"‚ùå –û—à–∏–±–∫–∞: –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {vk_dumps}")
        print("–°–æ–∑–¥–∞–π—Ç–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –∏ –ø–æ–º–µ—Å—Ç–∏—Ç–µ –≤ –Ω–µ—ë —Ñ–∞–π–ª—ã .db —Å –¥–∞–Ω–Ω—ã–º–∏ VK")
        return 1

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ .db —Ñ–∞–π–ª–æ–≤
    db_files = [f for f in os.listdir(vk_dumps) if f.endswith('.db')]
    if not db_files:
        print(f"‚ùå –í –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ {vk_dumps} –Ω–µ –Ω–∞–π–¥–µ–Ω–æ .db —Ñ–∞–π–ª–æ–≤")
        print("–ü–æ–º–µ—Å—Ç–∏—Ç–µ —Ñ–∞–π–ª—ã —Å –¥–∞–Ω–Ω—ã–º–∏ VK –≤ —ç—Ç—É –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é")
        return 1

    print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(db_files)} —Ñ–∞–π–ª–æ–≤ –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏:")
    for db_file in db_files:
        file_path = os.path.join(vk_dumps, db_file)
        file_size = os.path.getsize(file_path) / 1024 / 1024
        print(f"   - {db_file} ({file_size:.2f} MB)")

    try:
        from migrators.vk.VKDataMigrator import VKDataMigrator

        migrator = VKDataMigrator(target_db, vk_dumps)
        migrator.run_migration()

        print("\nüéâ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        print("üí° –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: python run_web_interface.py")
        return 0

    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø–∞–ø–∫–∞ migrators/ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏")
        return 1
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –º–∏–≥—Ä–∞—Ü–∏–∏: {e}")
        return 1

if __name__ == "__main__":
    exit_code = main()
    sys.exit(exit_code)